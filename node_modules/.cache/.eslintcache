[{"/home/black/Downloads/TroodonWeb/src/index.js":"1","/home/black/Downloads/TroodonWeb/src/App.js":"2","/home/black/Downloads/TroodonWeb/src/Components/Layout.js":"3","/home/black/Downloads/TroodonWeb/src/Components/MyData.js":"4","/home/black/Downloads/TroodonWeb/src/Components/ModelTrainingData.js":"5","/home/black/Downloads/TroodonWeb/src/Components/OutputData.js":"6","/home/black/Documents/Final/Troodon/src/index.js":"7","/home/black/Documents/Final/Troodon/src/App.js":"8","/home/black/Documents/Final/Troodon/src/Components/Layout.js":"9","/home/black/Documents/Final/Troodon/src/Components/MyData.js":"10","/home/black/Documents/Final/Troodon/src/Components/ModelTrainingData.js":"11","/home/black/Documents/Final/Troodon/src/Components/OutputData.js":"12"},{"size":219,"mtime":1619102675897,"results":"13","hashOfConfig":"14"},{"size":168,"mtime":1619096581376,"results":"15","hashOfConfig":"14"},{"size":2295,"mtime":1619108807751,"results":"16","hashOfConfig":"14"},{"size":1043,"mtime":1619115154476,"results":"17","hashOfConfig":"14"},{"size":2115,"mtime":1619114903876,"results":"18","hashOfConfig":"14"},{"size":1076,"mtime":1619114861602,"results":"19","hashOfConfig":"14"},{"size":219,"mtime":1619102675897,"results":"20","hashOfConfig":"21"},{"size":168,"mtime":1619096581376,"results":"22","hashOfConfig":"21"},{"size":3060,"mtime":1625250222818,"results":"23","hashOfConfig":"21"},{"size":1057,"mtime":1625250081325,"results":"24","hashOfConfig":"21"},{"size":1971,"mtime":1625250973378,"results":"25","hashOfConfig":"21"},{"size":1096,"mtime":1625250126676,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bo2ex2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"exi38f",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/black/Downloads/TroodonWeb/src/index.js",[],"/home/black/Downloads/TroodonWeb/src/App.js",[],"/home/black/Downloads/TroodonWeb/src/Components/Layout.js",["55","56"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"antd/dist/antd.css\";\r\nimport { PageHeader, Layout, Menu, Button, Divider } from \"antd\";\r\nimport \"./Layout.css\";\r\nimport MyData from \"./MyData\";\r\nimport ModelTrainingData from \"./ModelTrainingData\";\r\nimport OutputData from \"./OutputData\";\r\n\r\nconst LayoutComponent = () => {\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const [currentNavSelected, setCurrentNavSelected] = React.useState(\"1\");\r\n  const [scriptCalled, setScriptCalled] = React.useState(false);\r\n  const [scriptMessage, setScriptMessage] = React.useState(false);\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultValue={currentNavSelected}>\r\n          <Menu.Item\r\n            key=\"1\"\r\n            onClick={() => {\r\n              setCurrentNavSelected(\"1\");\r\n            }}\r\n          >\r\n            My Data\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            onClick={() => {\r\n              setCurrentNavSelected(\"2\");\r\n            }}\r\n          >\r\n            Model Training Data\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            onClick={() => {\r\n              setCurrentNavSelected(\"3\");\r\n            }}\r\n          >\r\n            Output\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <br />\r\n        <Button\r\n          onClick={() => {\r\n            if (!scriptCalled) {\r\n              axios.get(\"/script\").then((resp) => {\r\n                setScriptMessage(resp.data);\r\n              });\r\n            }\r\n            setScriptCalled(true);\r\n          }}\r\n          danger\r\n          disabled={scriptCalled}\r\n        >\r\n          Execute Scripts\r\n        </Button>\r\n        <Divider />\r\n        <h3 style={{ color: \"red\" }}>{scriptMessage}</h3>\r\n        <Divider />\r\n        {currentNavSelected === \"1\" ? (\r\n          <MyData />\r\n        ) : currentNavSelected === \"2\" ? (\r\n          <ModelTrainingData />\r\n        ) : currentNavSelected === \"3\" ? (\r\n          <OutputData />\r\n        ) : null}\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}></Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutComponent;\r\n","/home/black/Downloads/TroodonWeb/src/Components/MyData.js",[],"/home/black/Downloads/TroodonWeb/src/Components/ModelTrainingData.js",["57"],"import { Divider } from \"antd\";\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst ModelTraining = () => {\n  const [\n    ClassificationDataResponse,\n    setClassificationDataResponse,\n  ] = React.useState([]);\n  const [SpeedupResponse, setSpeedupResponse] = React.useState([]);\n\n  React.useEffect(() => {\n    const socket = socketIOClient(\"/\");\n    socket.on(\"Speedup_Data\", (data) => {\n      setSpeedupResponse(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    const socket = socketIOClient(\"/\");\n    socket.on(\"Classification_Data\", (data) => {\n      setClassificationDataResponse(data);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>Classification Data</h1>\n      <div className=\"site-layout-content\">\n        {ClassificationDataResponse !== undefined ? (\n          <table>\n            <tbody>\n              {ClassificationDataResponse.map((subDivs, i) => (\n                <>\n                  {subDivs.map((value, j) => (\n                    <tr key={j}>\n                      {value.map((innervalue, k) => (\n                        <td key={k} style={{ padding: \"10px\" }}>\n                          {innervalue}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </>\n              ))}\n            </tbody>\n          </table>\n        ) : null}\n      </div>\n      <Divider />\n      {/* <h1>Speedup Data</h1>\n      <div className=\"site-layout-content\">\n        {SpeedupResponse !== undefined ? (\n          <table>\n            <tbody>\n              {SpeedupResponse.map((subDivs, i) => (\n                <>\n                  {subDivs.map((value, j) => (\n                    <tr key={j}>\n                      {value.map((innervalue, k) => (\n                        <td key={k} style={{ padding: \"10px\" }}>\n                          {innervalue}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </>\n              ))}\n            </tbody>\n          </table>\n        ) : null}\n      </div> */}\n    </>\n  );\n};\nexport default ModelTraining;\n","/home/black/Downloads/TroodonWeb/src/Components/OutputData.js",[],"/home/black/Documents/Final/Troodon/src/index.js",[],["58","59"],"/home/black/Documents/Final/Troodon/src/App.js",[],"/home/black/Documents/Final/Troodon/src/Components/Layout.js",["60","61"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"antd/dist/antd.css\";\r\nimport { PageHeader, Layout, Menu, Button, Divider } from \"antd\";\r\nimport \"./Layout.css\";\r\nimport MyData from \"./MyData\";\r\nimport ModelTrainingData from \"./ModelTrainingData\";\r\nimport OutputData from \"./OutputData\";\r\n\r\nconst LayoutComponent = () => {\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const [currentNavSelected, setCurrentNavSelected] = React.useState(\"1\");\r\n  const [scriptCalled, setScriptCalled] = React.useState(false);\r\n  const [scriptMessage, setScriptMessage] = React.useState(false);\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultValue={currentNavSelected}>\r\n          <Menu.Item\r\n            key=\"1\"\r\n            onClick={() => {\r\n              setCurrentNavSelected(\"1\");\r\n            }}\r\n          >\r\n            My Data\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            onClick={() => {\r\n              setCurrentNavSelected(\"2\");\r\n            }}\r\n          >\r\n            Model Training Data\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            onClick={() => {\r\n              setCurrentNavSelected(\"3\");\r\n            }}\r\n          >\r\n            Output\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <br />\r\n        <Button\r\n          onClick={() => {\r\n            if (!scriptCalled) {\r\n              axios.get(\"/startscript\").then((resp) => {\r\n                setScriptMessage(resp.data);\r\n              });\r\n            }\r\n            setScriptCalled(true);\r\n          }}\r\n          danger\r\n          disabled={scriptCalled}\r\n        >\r\n          Start Scripts\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            if (!scriptCalled) {\r\n              axios.get(\"/resumescript\").then((resp) => {\r\n                setScriptMessage(resp.data);\r\n              });\r\n            }\r\n            setScriptCalled(true);\r\n          }}\r\n          danger\r\n          disabled={scriptCalled}\r\n        >\r\n          Resume Scripts\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            if (!scriptCalled) {\r\n              axios.get(\"/restartscript\").then((resp) => {\r\n                setScriptMessage(resp.data);\r\n              });\r\n            }\r\n            setScriptCalled(true);\r\n          }}\r\n          danger\r\n          disabled={scriptCalled}\r\n        >\r\n          Restart Scripts\r\n        </Button>\r\n\r\n        <Divider />\r\n        <h3 style={{ color: \"red\" }}>{scriptMessage}</h3>\r\n        <Divider />\r\n        {currentNavSelected === \"1\" ? (\r\n          <MyData />\r\n        ) : currentNavSelected === \"2\" ? (\r\n          <ModelTrainingData />\r\n        ) : currentNavSelected === \"3\" ? (\r\n          <OutputData />\r\n        ) : null}\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}></Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutComponent;\r\n","/home/black/Documents/Final/Troodon/src/Components/MyData.js",[],"/home/black/Documents/Final/Troodon/src/Components/ModelTrainingData.js",["62","63"],"/home/black/Documents/Final/Troodon/src/Components/OutputData.js",[],{"ruleId":"64","severity":1,"message":"65","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":20},{"ruleId":"64","severity":1,"message":"68","line":11,"column":27,"nodeType":"66","messageId":"67","endLine":11,"endColumn":32},{"ruleId":"64","severity":1,"message":"69","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":25},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":20},{"ruleId":"64","severity":1,"message":"68","line":11,"column":27,"nodeType":"66","messageId":"67","endLine":11,"endColumn":32},{"ruleId":"64","severity":1,"message":"69","line":8,"column":10,"nodeType":"66","messageId":"67","endLine":8,"endColumn":25},{"ruleId":"64","severity":1,"message":"74","line":8,"column":27,"nodeType":"66","messageId":"67","endLine":8,"endColumn":45},"no-unused-vars","'PageHeader' is defined but never used.","Identifier","unusedVar","'Sider' is assigned a value but never used.","'SpeedupResponse' is assigned a value but never used.","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'setSpeedupResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]