{"ast":null,"code":"var _jsxFileName = \"/home/black/Downloads/Troodon Web/src/Components/MyData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyData = () => {\n  _s();\n\n  const [myDataResponse, setMyDataResponse] = React.useState([]);\n  React.useEffect(() => {\n    const socket = socketIOClient(\"/\");\n    socket.on(\"MyData\", data => {\n      setMyDataResponse(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: [myDataResponse !== undefined ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: myDataResponse.map((subDivs, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: subDivs.map((value, j) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: value.map((innervalue, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"5px\"\n                },\n                children: innervalue\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, this))\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this))\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyData, \"/rOajQV6y0DSbl32ieuAXK5RdnA=\");\n\n_c = MyData;\nexport default MyData;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyData\");","map":{"version":3,"sources":["/home/black/Downloads/Troodon Web/src/Components/MyData.js"],"names":["React","socketIOClient","MyData","myDataResponse","setMyDataResponse","useState","useEffect","socket","on","data","undefined","map","subDivs","i","value","j","innervalue","padding"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5C;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAMC,MAAM,GAAGN,cAAc,CAAC,GAAD,CAA7B;AACAM,IAAAA,MAAM,CAACC,EAAP,CAAU,QAAV,EAAqBC,IAAD,IAAU;AAC5BL,MAAAA,iBAAiB,CAACK,IAAD,CAAjB;AACD,KAFD;AAGD,GALD,EAKG,EALH;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,iBACGN,cAAc,KAAKO,SAAnB,gBACC;AAAA,+BACE;AAAA,oBACGP,cAAc,CAACQ,GAAf,CAAmB,CAACC,OAAD,EAAUC,CAAV,kBAClB;AAAA,sBACGD,OAAO,CAACD,GAAR,CAAY,CAACG,KAAD,EAAQC,CAAR,kBACX;AAAA,wBACGD,KAAK,CAACH,GAAN,CAAU,CAACK,UAAD,EAAaD,CAAb,kBACT;AAAY,gBAAA,KAAK,EAAE;AAAEE,kBAAAA,OAAO,EAAE;AAAX,iBAAnB;AAAA,0BACGD;AADH,iBAASD,CAAT;AAAA;AAAA;AAAA;AAAA,sBADD;AADH,eAASF,CAAT;AAAA;AAAA;AAAA;AAAA,oBADD;AADH,2BADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAkBG,IAnBN,EAmBY,GAnBZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA0BD,CApCD;;GAAMX,M;;KAAAA,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst MyData = () => {\n  const [myDataResponse, setMyDataResponse] = React.useState([]);\n\n  React.useEffect(() => {\n    const socket = socketIOClient(\"/\");\n    socket.on(\"MyData\", (data) => {\n      setMyDataResponse(data);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>My Data</h1>\n      <div className=\"site-layout-content\">\n        {myDataResponse !== undefined ? (\n          <table>\n            <tbody>\n              {myDataResponse.map((subDivs, i) => (\n                <>\n                  {subDivs.map((value, j) => (\n                    <tr key={i}>\n                      {value.map((innervalue, j) => (\n                        <td key={j} style={{ padding: \"5px\" }}>\n                          {innervalue}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </>\n              ))}\n            </tbody>\n          </table>\n        ) : null}{\" \"}\n      </div>\n    </>\n  );\n};\nexport default MyData;\n"]},"metadata":{},"sourceType":"module"}